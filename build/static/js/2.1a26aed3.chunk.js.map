{"version":3,"sources":["containers/Orders/Orders.css","../node_modules/@material-ui/core/esm/Container/Container.js","../node_modules/@material-ui/core/esm/Paper/Paper.js","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","ordersContainer","Container_Container","react_default","a","forwardRef","props","ref","classes","className","_props$component","component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","other","Object","objectWithoutProperties","createElement","esm_extends","clsx_m","root","concat","capitalize","String","esm_Container_Container","styles_withStyles","theme","_root","width","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","defineProperty","breakpoints","up","keys","values","reduce","acc","breakpoint","value","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","name","Paper_Paper","_props$square","square","_props$elevation","elevation","_props$variant","variant","outlined","rounded","esm_Paper_Paper","elevations","shadows","forEach","shadow","index","boxShadow","backgroundColor","palette","background","paper","color","text","primary","transition","transitions","create","borderRadius","shape","border","divider","withStyles","container","height","padding","marginTop","marginBot","display","flexDirection","alignItems","justifyContent","typography","lineHeight","fontSize","ingredients","ingredientName","push","amount","ingredientOutput","map","ig","style","textTransform","margin","key","Typography","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","order","Order","id","textAlign","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"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","file":"static/js/2.1a26aed3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ordersContainer\":\"Orders__ordersContainer__Rpzrp\"};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  var _root;\n\n  return {\n    /* Styles applied to the root element. */\n    root: (_root = {\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }, _defineProperty(_root, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }), _defineProperty(_root, theme.breakpoints.up('md'), {\n      paddingLeft: theme.spacing(4),\n      paddingRight: theme.spacing(4)\n    }), _root),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  var elevations = {};\n  theme.shadows.forEach(function (shadow, index) {\n    elevations[\"elevation\".concat(index)] = {\n      boxShadow: shadow\n    };\n  });\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create('box-shadow')\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` */\n    outlined: {\n      border: \"1px solid \".concat(theme.palette.divider)\n    }\n  }, elevations);\n};\nvar Paper = React.forwardRef(function Paper(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$elevation = props.elevation,\n      elevation = _props$elevation === void 0 ? 1 : _props$elevation,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'elevation' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"square\", \"elevation\", \"variant\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (classes[\"elevation\".concat(elevation)] === undefined) {\n      console.error(\"Material-UI: this elevation `\".concat(elevation, \"` is not implemented.\"));\n    }\n  }\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant === 'outlined' ? classes.outlined : classes[\"elevation\".concat(elevation)], !square && classes.rounded),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   */\n  elevation: PropTypes.number,\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['elevation', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPaper'\n})(Paper);","import React from 'react'\r\n\r\n// import classes from './Order.css';\r\n\r\n// Material UI\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport 'typeface-roboto';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = () => ({\r\n    container: {\r\n        backgroundColor: \"#fff\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        padding: 0,\r\n        marginTop: 0,\r\n    },\r\n    paper: {\r\n        marginTop: 5,\r\n        marginBot: 5,\r\n        display: \"flex\",\r\n        padding: 10,\r\n        flexDirection: \"column\",\r\n        alignItems: \"flex-start\",\r\n        justifyContent: \"center\"\r\n    },\r\n    typography: {\r\n        display: \"block\",\r\n        lineHeight: 2.0,\r\n        fontSize: \"1.4em\",\r\n    }\r\n});\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n    const { classes } = props;\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push({\r\n            name: ingredientName,\r\n            amount: props.ingredients[ingredientName]\r\n        });\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span\r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: 'inline block',\r\n                margin: '0 8px 3px 0px',\r\n                // border: '1px solid #ccc',\r\n                padding: '0px'\r\n            }}\r\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\r\n    });\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n            <Paper className={classes.paper}>\r\n                {/* // <div className={classes.Order}> */}\r\n                <Typography className={classes.typography}>\r\n                    Ingredients: {ingredientOutput}\r\n                </Typography>\r\n                <Typography className={classes.typography}>\r\n                    Price: <strong>NZD {Number.parseFloat(props.price).toFixed(2)}</strong>\r\n                </Typography>\r\n                {/* // </div> */}\r\n            </Paper>\r\n        </Container>\r\n    );\r\n\r\n};\r\n\r\nexport default withStyles(styles)(order);\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport './Orders.css';\r\n\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\n// Material UI\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport 'typeface-roboto';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst styles = () => ({\r\n    container: {\r\n        backgroundColor: \"#fff\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        padding: 5,\r\n        marginTop: 0,\r\n        border: \"1 px solid #f5f5f5\",\r\n    },\r\n    typography: {\r\n        textAlign: \"center\",\r\n    }\r\n});\r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount () {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render () {\r\n        let orders = <Spinner />;\r\n        const { classes } = this.props;\r\n        if(!this.props.loading){\r\n            orders = (\r\n                this.props.orders.map(order => (\r\n                    <Order \r\n                        key={order.id}\r\n                        ingredients={order.ingredients}\r\n                        price={order.price}/>\r\n                )   )\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"ordersContainer\">\r\n            <Container className={classes.container}>\r\n                    <Typography className={classes.typography} variant=\"h4\">Your previous burger orders</Typography>\r\n                {orders}\r\n            </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    };\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios)));"],"sourceRoot":""}